#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ CSV —Å —Å—Å—ã–ª–∫–∞–º–∏
–†–∞–±–æ—Ç–∞–µ—Ç —Å combined_app.py
"""

import requests
import json
import csv
import io

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://localhost:5000"
TEST_EVENT_ID = 1  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID —Å–æ–±—ã—Ç–∏—è

def test_csv_export():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —ç–∫—Å–ø–æ—Ä—Ç–∞ CSV —Å —Å—Å—ã–ª–∫–∞–º–∏"""
    
    print("=== –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ CSV —Å —Å—Å—ã–ª–∫–∞–º–∏ ===")
    print(f"üìç URL —Å–µ—Ä–≤–µ—Ä–∞: {BASE_URL}")
    print(f"üéØ ID —Å–æ–±—ã—Ç–∏—è: {TEST_EVENT_ID}")
    print()
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    data = {
        "event_id": TEST_EVENT_ID,
        "language": "ru"  # –∏–ª–∏ "hy" –¥–ª—è –∞—Ä–º—è–Ω—Å–∫–æ–≥–æ
    }
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç CSV...")
        response = requests.post(
            f"{BASE_URL}/api/export_csv_guests_with_links",
            json=data,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            
            if result.get('success'):
                print("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω!")
                print(f"üìä –í—Å–µ–≥–æ –≥–æ—Å—Ç–µ–π: {result.get('total_guests')}")
                print(f"üìÅ –ò–º—è —Ñ–∞–π–ª–∞: {result.get('filename')}")
                
                # –ü–∞—Ä—Å–∏–º CSV –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                csv_data = result.get('csv_data', '')
                print("\nüìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ CSV:")
                print("=" * 80)
                
                # –ß–∏—Ç–∞–µ–º CSV
                csv_reader = csv.reader(io.StringIO(csv_data))
                for i, row in enumerate(csv_reader):
                    if i == 0:
                        print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {row}")
                    else:
                        print(f"–°—Ç—Ä–æ–∫–∞ {i}: {row}")
                
                print("=" * 80)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                with open(f"test_export_{TEST_EVENT_ID}.csv", "w", encoding="utf-8") as f:
                    f.write(csv_data)
                print(f"üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: test_export_{TEST_EVENT_ID}.csv")
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
        elif response.status_code == 401:
            print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        elif response.status_code == 404:
            print("‚ùå –û—à–∏–±–∫–∞: —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ combined_app.py –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

def test_armenian_export():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç –Ω–∞ –∞—Ä–º—è–Ω—Å–∫–æ–º —è–∑—ã–∫–µ"""
    
    print("\n=== –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ CSV –Ω–∞ –∞—Ä–º—è–Ω—Å–∫–æ–º —è–∑—ã–∫–µ ===")
    
    data = {
        "event_id": TEST_EVENT_ID,
        "language": "hy"
    }
    
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç CSV (–∞—Ä–º—è–Ω—Å–∫–∏–π)...")
        response = requests.post(
            f"{BASE_URL}/api/export_csv_guests_with_links",
            json=data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            result = response.json()
            
            if result.get('success'):
                print("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –Ω–∞ –∞—Ä–º—è–Ω—Å–∫–æ–º —É—Å–ø–µ—à–µ–Ω!")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –∞—Ä–º—è–Ω—Å–∫–æ–º
                csv_data = result.get('csv_data', '')
                csv_reader = csv.reader(io.StringIO(csv_data))
                header = next(csv_reader)
                print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –∞—Ä–º—è–Ω—Å–∫–æ–º: {header}")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                with open(f"test_export_hy_{TEST_EVENT_ID}.csv", "w", encoding="utf-8") as f:
                    f.write(csv_data)
                print(f"üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: test_export_hy_{TEST_EVENT_ID}.csv")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

def test_error_cases():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫"""
    
    print("\n=== –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ ===")
    
    # –¢–µ—Å—Ç –±–µ–∑ event_id
    print("üîç –¢–µ—Å—Ç –±–µ–∑ event_id...")
    try:
        response = requests.post(
            f"{BASE_URL}/api/export_csv_guests_with_links",
            json={"language": "ru"},
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 400:
            result = response.json()
            print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏: {result.get('error')}")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
    
    # –¢–µ—Å—Ç —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º event_id
    print("üîç –¢–µ—Å—Ç —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º event_id...")
    try:
        response = requests.post(
            f"{BASE_URL}/api/export_csv_guests_with_links",
            json={"event_id": 99999, "language": "ru"},
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 404:
            result = response.json()
            print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏: {result.get('error')}")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —ç–∫—Å–ø–æ—Ä—Ç–∞ CSV –¥–ª—è combined_app.py...")
    print("=" * 60)
    
    test_csv_export()
    test_armenian_export()
    test_error_cases()
    
    print("\n" + "=" * 60)
    print("‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ combined_app.py –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000")
    print("2. –ò–∑–º–µ–Ω–∏—Ç–µ TEST_EVENT_ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID —Å–æ–±—ã—Ç–∏—è")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ CSV —Ñ–∞–π–ª—ã")
